using Base

struct Public_Info
    public_vp_count
    resource_count
    card_count
end

struct Private_Info
    private_vp_count
    resources::Dict{Symbol,Int}
end

#function Int turn(Private_Info current_player, List{Public_Info} other_players):
#end

#     *-*-*-*-*-*-*
#     |   |   |   |
#   *-*-*-*-*-*-*-*-*
#   |   |   |   |   |
# *-*-*-*-*-*-*-*-*-*-*
# |   |   |   |   |   |
# *-*-*-*-*-*-*-*-*-*-*
#   |   |   |   |   |
#   *-*-*-*-*-*-*-*-*
#     |   |   |   |
#     *-*-*-*-*-*-*
#
# Coordinate in (row, column)

#       61-62-63-64-65-66-67
#       |  Q  |  R  |  S  |
#    51-52-53-54-55-56-57-58-59
#    |  M  |  N  |  O  |  P  |
# 41-42-43-44-45-46-47-48-49-4!-4@
# |  H  |  I  |  J  |  K  |  L  |
# 31-32-33-34-35-36-37-38-39-3!-3@
#    |  D  |  E  |  F  |  G  |
#    21-22-23-24-25-26-27-28-29
#       |  A  |  B  |  C  |
#       11-12-13-14-15-16-17

TILE_TO_COORDS = Dict(
                      :A => Set([(1,1),(1,2),(1,3),(2,2),(2,3),(2,4)]),
                      
                      :B => Set([(1,1),(1,2),(1,3),(2,2),(2,3),(2,4)]),
                      :C => Set([(1,1),(1,2),(1,3),(2,2),(2,3),(2,4)]),
                      :D => Set([(1,1),(1,2),(1,3),(2,2),(2,3),(2,4)]),
                      :E => Set([(1,1),(1,2),(1,3),(2,2),(2,3),(2,4)]),
                      :F => Set([(1,1),(1,2),(1,3),(2,2),(2,3),(2,4)]),
                      :G => Set([(1,1),(1,2),(1,3),(2,2),(2,3),(2,4)]),
                      :H => Set([(1,1),(1,2),(1,3),(2,2),(2,3),(2,4)]),
                      :I => Set([(1,1),(1,2),(1,3),(2,2),(2,3),(2,4)]),
                      :J => Set([(1,1),(1,2),(1,3),(2,2),(2,3),(2,4)]),
                      :K => Set([(1,1),(1,2),(1,3),(2,2),(2,3),(2,4)]),
                      :L => Set([(1,1),(1,2),(1,3),(2,2),(2,3),(2,4)]),
                      :M => Set([(1,1),(1,2),(1,3),(2,2),(2,3),(2,4)]),
                      :N => Set([(1,1),(1,2),(1,3),(2,2),(2,3),(2,4)]),
                      :O => Set([(1,1),(1,2),(1,3),(2,2),(2,3),(2,4)]),
                      :P => Set([(1,1),(1,2),(1,3),(2,2),(2,3),(2,4)]),
                      :Q => Set([(1,1),(1,2),(1,3),(2,2),(2,3),(2,4)]),
                      :R => Set([(1,1),(1,2),(1,3),(2,2),(2,3),(2,4)]),
                      :S => Set([(1,1),(1,2),(1,3),(2,2),(2,3),(2,4)]),
                     )
function roll_dice(value)

end

